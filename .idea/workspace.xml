<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="61abad96-6278-42f1-a883-7b6d6a8e4d78" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/ch2/cf/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch2/others/echo4.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch2/others/go.mod" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch2/others/pointer.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch2/others/value.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch2/popcount/popcount.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch2/scope/scope.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch2/temperature/conv.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch2/temperature/tempconv.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch3/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch3/mandelbrot.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch3/s.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/ch3/surface.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/dup1.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/dup1.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/dup2.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/dup2.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/dup3.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/dup3.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/echo1.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/echo1.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/echo2.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/echo2.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/echo3.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/echo3.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/fetch.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/fetch.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/fetchall.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/fetchall.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/hello/hello" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/hello/hello" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/hello/hello.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/hello/hello.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/input" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/input" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/out.gif" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/out.gif" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/server/lissajous.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/server/lissajous.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/server/server" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/server/server" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/server/server2.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/server/server2.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch1/server1.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/server1.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ch2/ftoc.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch2/others/ftoc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/gopl.iml" beforeDir="false" afterPath="$PROJECT_DIR$/gopl.iml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/opt/go/libexec" />
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
    <option name="urls">
      <list>
        <option value="file://$PROJECT_DIR$" />
      </list>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2NP9C9vSfewCTeBVSZfe0BxqAXq" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "WebServerToolWindowFactoryState": "false",
    "configurable..is.expanded": "true",
    "configurable.GoLibrariesConfigurable.is.expanded": "true",
    "go.import.settings.migrated": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "com.goide.configuration.GoLibrariesConfigurableProvider",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$/ch2/others" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build ch3">
    <configuration default="true" type="DjangoTestsConfigurationType">
      <module name="gopl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="TARGET" value="" />
      <option name="SETTINGS_FILE" value="" />
      <option name="CUSTOM_SETTINGS" value="false" />
      <option name="USE_OPTIONS" value="false" />
      <option name="OPTIONS" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="gopl" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build ch2/scope" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="gopl" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="ch2/scope" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/src/ch2/scope/scope.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build ch3" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="gopl" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="ch3" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/src/ch3/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="gopl" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/src/ch2/cf/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="gopl" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType">
      <module name="gopl" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
      <module name="gopl" />
      <option name="filePath" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="PyBehaveRunConfigurationType" factoryName="Behave">
      <module name="gopl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="ADDITIONAL_ARGS" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <module name="gopl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Python.FlaskServer">
      <module name="gopl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="Tox" factoryName="Tox">
      <module name="gopl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Autodetect">
      <module name="gopl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;&quot;" />
      <option name="_new_targetType" value="&quot;PATH&quot;" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="tests" factoryName="Doctests">
      <module name="gopl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="FOLDER_NAME" value="" />
      <option name="TEST_TYPE" value="TEST_SCRIPT" />
      <option name="PATTERN" value="" />
      <option name="USE_PATTERN" value="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build ch3" />
        <item itemvalue="Go Build.go build ch2/scope" />
        <item itemvalue="Go Build.go build main.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="61abad96-6278-42f1-a883-7b6d6a8e4d78" name="Changes" comment="" />
      <created>1679554721328</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1679554721328</updated>
      <workItem from="1679554722527" duration="201000" />
      <workItem from="1679554928823" duration="23000" />
      <workItem from="1679554973013" duration="217000" />
      <workItem from="1679555212493" duration="6693000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <integration-enabled>false</integration-enabled>
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>